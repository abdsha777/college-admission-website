# Generated by Django 4.0.7 on 2023-07-03 09:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile', models.CharField(max_length=15, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('category', models.CharField(choices=[('ug', 'UG'), ('pg', 'PG')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('className', models.CharField(max_length=20)),
                ('admission_type', models.CharField(choices=[('provisional', 'Provisional'), ('non_provisional', 'Non-Provisional')], max_length=15)),
                ('first_name', models.CharField(blank=True, max_length=256)),
                ('middle_name', models.CharField(blank=True, max_length=256)),
                ('last_name', models.CharField(blank=True, max_length=256)),
                ('birth_date', models.DateField()),
                ('aadhaar_card_no', models.CharField(blank=True, max_length=12, null=True)),
                ('father_name', models.CharField(blank=True, max_length=256, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=256, null=True)),
                ('local_address', models.CharField(blank=True, max_length=256, null=True)),
                ('state', models.CharField(blank=True, max_length=256, null=True)),
                ('district', models.CharField(blank=True, max_length=256, null=True)),
                ('taluka', models.CharField(blank=True, max_length=256, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('permanent_address', models.CharField(blank=True, max_length=256, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('nationality', models.CharField(blank=True, max_length=256, null=True)),
                ('mother_tongue', models.CharField(blank=True, max_length=256, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=256, null=True)),
                ('occupational_status', models.CharField(blank=True, max_length=256, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=5, null=True)),
                ('handicap', models.BooleanField(blank=True, default=False, null=True)),
                ('is_organ_donor', models.BooleanField(blank=True, default=False, null=True)),
                ('conveyance_use', models.CharField(blank=True, max_length=256, null=True)),
                ('religion', models.CharField(blank=True, max_length=256, null=True)),
                ('caste', models.CharField(blank=True, max_length=256, null=True)),
                ('sub_caste', models.CharField(blank=True, max_length=256, null=True)),
                ('caste_validity_no', models.CharField(blank=True, max_length=256, null=True)),
                ('is_minority', models.BooleanField(blank=True, default=False, null=True)),
                ('minority_detail', models.CharField(blank=True, max_length=256, null=True)),
                ('computer_course', models.CharField(blank=True, max_length=256, null=True)),
                ('specialization', models.CharField(blank=True, max_length=256, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
    ]
